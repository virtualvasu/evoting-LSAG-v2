/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVotingAndTallyingContract,
  IVotingAndTallyingContractInterface,
} from "../../LSAGVotingSystemTest.sol/IVotingAndTallyingContract";

const _abi = [
  {
    inputs: [],
    name: "finalizeResults",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTallyResults",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotingStats",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voterIndex",
        type: "uint256",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voterIndex",
        type: "uint256",
      },
    ],
    name: "isVoteTallied",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTallyingPhase",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVotingPhase",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "actualVoteSignature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "voterIndex",
        type: "uint256",
      },
    ],
    name: "tally",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signatureOnHash",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "voteHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "voterIndex",
        type: "uint256",
      },
    ],
    name: "voting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IVotingAndTallyingContract__factory {
  static readonly abi = _abi;
  static createInterface(): IVotingAndTallyingContractInterface {
    return new Interface(_abi) as IVotingAndTallyingContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVotingAndTallyingContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IVotingAndTallyingContract;
  }
}
