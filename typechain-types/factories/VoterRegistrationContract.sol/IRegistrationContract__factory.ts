/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRegistrationContract,
  IRegistrationContractInterface,
} from "../../VoterRegistrationContract.sol/IRegistrationContract";

const _abi = [
  {
    inputs: [],
    name: "candidates",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "electionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "electionSetup",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "publicKey",
        type: "bytes",
      },
    ],
    name: "isCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRegistrationContract__factory {
  static readonly abi = _abi;
  static createInterface(): IRegistrationContractInterface {
    return new Interface(_abi) as IRegistrationContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRegistrationContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IRegistrationContract;
  }
}
