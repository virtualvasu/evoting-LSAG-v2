/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVoterRegistrationContract,
  IVoterRegistrationContractInterface,
} from "../../VotingAndTallyingContract.sol/IVoterRegistrationContract";

const _abi = [
  {
    inputs: [],
    name: "getVoterCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "voterIndex",
        type: "uint256",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "registeredVoters",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "lsagSignature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "votingPublicKey",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "registrationTime",
            type: "uint256",
          },
        ],
        internalType: "struct IVoterRegistrationContract.VoterRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IVoterRegistrationContract__factory {
  static readonly abi = _abi;
  static createInterface(): IVoterRegistrationContractInterface {
    return new Interface(_abi) as IVoterRegistrationContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVoterRegistrationContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IVoterRegistrationContract;
  }
}
